services:

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    hostname: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 3600
    depends_on:
      - caddy

  caddy:
    image: caddy:latest
    container_name: caddy
    hostname: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - WEBUI_URL=${WEBUI_URL}
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - ai_network
    depends_on:
      openwebui:
        condition: service_healthy
      init-admin:
        condition: service_completed_successfully

  init-admin:
    image: curlimages/curl:latest
    container_name: init-admin
    hostname: init-admin
    environment:
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
    networks:
      - ai_network
    depends_on:
      openwebui:
        condition: service_healthy
    command: >
      sh -c '
      curl -X POST "http://openwebui:8080/api/v1/auths/signup"
      -H "Content-Type: application/json"
      -d "{\"name\":\"$ADMIN_USERNAME\",\"email\":\"$ADMIN_EMAIL\",\"password\":\"$ADMIN_PASSWORD\"}"'

  openwebui:
    image: ghcr.io/open-webui/open-webui:latest
    container_name: openwebui
    hostname: openwebui
    restart: unless-stopped
    environment:
      - WEBUI_URL=https://${WEBUI_URL}
      - WEBUI_NAME=${WEBUI_NAME}
      - OLLAMA_BASE_URLS=http://ollama:11434/;${OLLAMA_BASE_URLS}
      - OPENAI_API_BASE_URLS=http://pipelines:9099;${OPENAI_API_BASE_URLS}
      - OPENAI_API_KEYS=0p3n-w3bu!;${OPENAI_API_KEYS}
      - CONTENT_EXTRACTION_ENGINE=tika
      - TIKA_SERVER_URL=http://tika:9998/
    volumes:
      - openwebui:/app/backend/data
    networks:
      - ai_network
    depends_on:
      - pipelines
      - tika
      - ollama

  pipelines:
    image: ghcr.io/open-webui/pipelines:latest
    container_name: pipelines
    hostname: pipelines
    restart: unless-stopped
    volumes:
      - pipelines:/app/pipelines
    networks:
      - ai_network

  tika:
    image: apache/tika:latest
    container_name: tika
    hostname: tika
    restart: unless-stopped
    networks:
      - ai_network

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    hostname: ollama
    restart: unless-stopped
    volumes:
      - ollama:/root/.ollama
    networks:
      - ai_network

volumes:
  caddy_config:
  caddy_data:
  openwebui:
  pipelines:
  ollama:

networks:
  ai_network:
    driver: bridge