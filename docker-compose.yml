services:
  caddy:
    image: caddy:latest
    container_name: caddy
    hostname: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - WEBUI_URL=${WEBUI_URL}
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - ai_network
    depends_on:
      - openwebui

  openwebui:
    image: ghcr.io/open-webui/open-webui:latest
    container_name: openwebui
    hostname: openwebui
    restart: unless-stopped
    environment:
      - WEBUI_NAME=${WEBUI_NAME}
      - WEBUI_URL=https://${WEBUI_URL}
      - CONTENT_EXTRACTION_ENGINE=tika
      - TIKA_SERVER_URL=http://tika:9998/
      - OLLAMA_BASE_URL=http://ollama:11434/
      - OPENAI_API_BASE_URLS=${OPENAI_API_BASE_URLS}
      - OPENAI_API_KEYS=${OPENAI_API_KEYS}
    volumes:
      - openwebui:/app/backend/data
    networks:
      - ai_network
    depends_on:
      - ollama
      - tika

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    hostname: ollama
    restart: unless-stopped
    volumes:
      - ollama:/root/.ollama
    networks:
      - ai_network

  tika:
    image: apache/tika:latest
    container_name: tika
    hostname: tika
    restart: unless-stopped
    networks:
      - ai_network

volumes:
  caddy_config:
  caddy_data:
  openwebui:
  ollama:

networks:
  ai_network:
    driver: bridge
